<apex:component controller="ECO_PMD_RunRateETCChart_Controller">
    <apex:attribute name="projectId" description="Project Number" type="String" required="true" /> 
    


    <style id="ecopmd.css">
        .pmd-chart-moredata {font: 12px arial, sans-serif !important;}    
        .negative {color: red;}
    </style>  
 
    
    <div ng-controller="dashRunRateController" class="panel panel-default dashbox">
        <div class="panel-heading">
              {!$Label.ECO_PMD_RUNRATEETC_TITLE}<span ng-Show="SFDCDATA.nodata"><b>{!$Label.ECO_PMD_NO_DATA}</b></span>
        </div>
         <table class='pmd-kpi'>
            <tr>
                <td ng-class="{'negative': SFDCDATA.AvgCost < 0}" ng-bind="(SFDCDATA.AvgCost/1000 | number:0) + 'k'"></td>
                <td ng-class="{'negative': SFDCDATA.CostEstETC < 0}" ng-bind="(SFDCDATA.CostEstETC/1000 | number:0) + 'k'"></td>
                <td ng-class="{'negative': SFDCDATA.CostETC < 0}" ng-bind="(SFDCDATA.CostETC/1000 | number:0) + 'k'"></td>
                <td ng-class="{'negative': SFDCDATA.Var < 0}" ng-bind="(SFDCDATA.Var/1000 | number:0) + 'k'"></td> 
            </tr>  
            <tr>
                <td>{!$Label.ECO_PMD_RUNRATEETC_AVCOST}</td>
                <td>{!$Label.ECO_PMD_RUNRATEETC_EST_ETC}</td>
                <td>{!$Label.ECO_PMD_RUNRATEETC_ETC}</td>
                <td>{!$Label.ECO_PMD_RUNRATEETC_VAR}</td>
            </tr> 
        </table>

        <div class="panel-body" >
            <div id="example">
                <div class="demo-section k-content">
                        <div id="chartRR" width='100%'></div>
                </div>
            </div>
        </div>
        <c:ECO_PMD_PanelFooter panelID="RR">
           {!$Label.ECO_PMD_RUNRATEETC_MOREINFO_DETAILS}
        </c:ECO_PMD_PanelFooter>
    </div>

<script>
    (function() {
        angular
        .module("ecopmd")
        .controller("dashRunRateController",dashRunRateController);

        function dashRunRateController($scope,$locale){
          $scope.exportedVariable = [];
          $scope.refreshData = exportedFunction;
            
          loadData($scope);
          $scope.isCollapsed = true;
         
                                                                            
          function internalFunction(param){
            return param;
          }
            
          function exportedFunction(){
              this.SFDCDATA=[];
              loadData(this); // this = $scope
          }
         


        function createChart() {
            $("#chartRR").kendoChart({
                    
                resizable: true,
                chartArea: {
                    height: 250
                },
                dataSource: {
                    data:$scope.SFDCDATA_NEW//.runRateData
                },
                legend: {
                    position: "bottom"
                },
                    seriesDefaults: {
                    type: "line",
                    stack: false
                },
                series: [{                        
                    type: "line",
                    field: "RunRate",
                    name: "{!$Label.ECO_PMD_RUNRATEETC_RR_ITD}",
                    color: "#808080"
                    //axis: "Currency"
                }, {
                    type: "line",
                    field: "CostForecast__c",
                    name: "{!$Label.ECO_PMD_RUNRATEETC_TTL_COST_ITD_PLAN}",
                    color: "#99CCFF"
                    //axis: "Currency"
                }, {
                    
                    type: "line",
                    field: "CostITD__c",
                    name: "{!$Label.ECO_PMD_RUNRATEETC_TTL_COST_ITD}",
                    color: "#FF9933"
                    //axis: "Currency"
                }],
                valueAxes: [{
                    name: "Currency",
                    //title: { text: $scope.SFDCDATA.currencyCode },
                    labels: {template : "#= value/1000 #k"},
                    axisCrossingValue: -100000000000000000
                }],
                categoryAxis: {
                    field: "SnapshotDate__c",
                    type: "Date",
                    //axisCrossingValues: [0,  -100000000000000000],
                    labels: {
                        rotation: 300//270
                    },
                    baseUnit: "months"
                },
                tooltip: {
                    visible: true,
                    format: "{0}%",
                    template: "#= series.name #: #= value #"
                }
            });
        }
      
        function loadData($scope){
            $scope.exportedVariable.push(internalFunction("value"));
            ECO_PMD_RunRateETCChart_Controller.ProjectSnapshot(
              '{!projectId}',
              function(result, event){
                if(event.status) {
                 //console.log(result);
                  $scope.$apply(function(){
                    $scope.SFDCDATA = result ;

                    getRunRate($scope);

                    createChart();
                    $(window).resize(function(){$("#chartRR").data("kendoChart").refresh();});
                    //UPDATE CHART TO USE CORRECT CURRENCYCODE
                    var chart = $("#chartRR").data("kendoChart");
                    chart.options.valueAxis.title.text = $scope.SFDCDATA.currencyCode + " k";
                    $("#chartRR").data("kendoChart").refresh();
                  });
                }
              });
            
        }

        function getRunRate($scope){
            var runratedata = [];
            var d = $scope.SFDCDATA;
            var startDate = new Date(d.runRateData[0].SnapshotDate__c);
            var endDate =  new Date(d.runRateData[d.runRateData.length-1].ProjectEndDate__c); 
            var today = new Date();
            var runRateDate = new Date(today.setMonth(today.getMonth() + 3));
            
            var RRDMinus3 = d.runRateData[d.runRateData.length-3],
                RRDMinus1 = d.runRateData[d.runRateData.length-1];

            var costITDMinus3 = (RRDMinus3) ? RRDMinus3.CostITD__c : 0,
                costITDMinus1 = (RRDMinus1) ? RRDMinus1.CostITD__c : 0;

            var avgRunRate = (costITDMinus1 - costITDMinus3) / 2;   
            var RunRate;

            if (runRateDate > endDate){
                runRateDate = endDate;
            }           
            var i = 0; 
            while (startDate < runRateDate){ 
                console.log(i);

                try{
                    var CostETC = d.runRateData[i].CostETC__c;
                    var CostITD = d.runRateData[i].CostITD__c;
                    var CostForecast = d.runRateData[i].CostForecast__c;
                    var SnapshotDate = d.runRateData[i].SnapshotDate__c;
                    RunRate = CostITD;
                    runratedata.push({CostETC__c: CostETC,
                                  CostITD__c: CostITD,
                                  CostForecast__c: CostForecast,
                                  SnapshotDate__c: startDate,
                                  RunRate: RunRate});
                }
                catch(ex){                   
                    RunRate += avgRunRate;
                     runratedata.push({
                                  SnapshotDate__c: startDate,
                                  RunRate: RunRate});
                }
                
                startDate = new Date(startDate.setMonth(startDate.getMonth() + 1));
                i ++
            }
            $scope.SFDCDATA_NEW = runratedata;
        }

        function getfiscal(period) {
        var d = new Date(period); 
            var m = d.getMonth() + 1;
            if(m < 10){
                m='0' + m;
            } 
            return 'FY' + d.getFullYear() + m;
            
        }
                    
    }

    })();
    
    
  
</script>

</apex:component>
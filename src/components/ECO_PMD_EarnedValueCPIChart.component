<apex:component controller="ECO_PMD_EarnedValueCPIChart_Controller">
    <apex:attribute name="projectId" description="Project Number" type="String" required="true" />

    <style id="ecopmd.css">
        .pmd-chart-moredata {font: 12px arial, sans-serif !important;}    
        .negative {color: red;}
    </style>   
    
    <div ng-controller="dashEarnedValueCPIController"  class="panel panel-default dashbox">
        <div class="panel-heading">
            {!$Label.ECO_PMD_CPI_TITLE} <span ng-Show="SFDCDATA.nodata"><b>{!$Label.ECO_PMD_NO_DATA}</b></span>
        </div>
         <table class='tdcenter pmd-kpi' width='100%'>
            <tr><td ng-bind="SFDCDATA.costvar"></td><td ng-bind="SFDCDATA.cpi"></td></tr>  
            <tr><td >{!$Label.ECO_PMD_CPI_COSTVAR_KPI} (<span ng-bind="SFDCDATA.currencyCode"></span>)</td><td>{!$Label.ECO_PMD_CPI_CPI_KPI}</td></tr> 
        </table>

        <div class="panel-body" >                
            <div id="example">
                <div class="demo-section k-content">
                    <div id="chartCPI" width='100%'></div>
                </div>        
            </div>
        </div>
     <c:ECO_PMD_PanelFooter panelID="CPI">{!$Label.ECO_PMD_CPI_MOREINFO_DETAILS}</c:ECO_PMD_PanelFooter>
</div>
<script>
    (function(){
        angular
        .module("ecopmd")
        .controller("dashEarnedValueCPIController",dashEarnedValueCPIController);

        function dashEarnedValueCPIController($scope,$locale){
          $scope.exportedVariable = [];
          $scope.refreshData = exportedFunction;
            
          loadData($scope);
          $scope.isCollapsed = true;
         
                                                                            
          function internalFunction(param){
            return param;
          }
            
          function exportedFunction(){
              this.SFDCDATA=[];
              loadData(this); // this = $scope
          }

     
        function loadData($scope){
            $scope.exportedVariable.push(internalFunction("value"));
            ECO_PMD_EarnedValueCPIChart_Controller.ProjectSnapshot(
              '{!projectId}',
              function(result, event){
                if(event.status) {
                  console.log(result);
                  $scope.$apply(function(){
                      $scope.SFDCDATA = result ;
                      createChart();
                      $(window).resize(function(){$("#chartCPI").data("kendoChart").refresh();});
                  });
                }
              });
        }
                    
        function createChart() {
            $("#chartCPI").kendoChart({
                    
                resizable: true,
                chartArea: {
                    height: 250
                },
                dataSource: {
                    data: $scope.SFDCDATA.earnedValuesData
                },
                legend: {
                    position: "bottom"
                },
                series: [{       
                    field: "EarnedValueCPI__c",
                    type: "line",
                    name: "{!$Label.ECO_PMD_CPI_CPI_KPI}",
                    color: "#99CCFF",
                    axis: "Currency"                   
                }],
                valueAxes: [{
                    name: "Currency",
                    //title: { text: $scope.SFDCDATA.currencyCode },
                    labels: {template : "#= value#"}
                }],
                categoryAxis: {
                    //categories: ["Mon", "Tue", "Wed", "Thu", "Fri"],
                    field: "SnapshotDate__c",
                    type: "Date",
                    baseUnit: "months",
                    //categories: categoryData,
                    axisCrossingValues: [0,  10],
                    labels: {
                        rotation: 300
                    }
                },
                tooltip: {
                    visible: true,
                    format: "{0}%",
                    template: "#= series.name #: #= value #"
                }
            });
        }
    }    
           
})();  
</script>




</apex:component>